<?php

declare(strict_types=1);

/*
 * SplititWebApiV3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SplititWebApiV3Lib\Tests\Controllers;

use SplititWebApiV3Lib\Controllers\InstallmentPlanController;
use SplititWebApiV3Lib\Exceptions;

class InstallmentPlanControllerTest extends BaseTestController
{
    /**
     * @var InstallmentPlanController InstallmentPlanController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getInstallmentPlanController();
    }

    public function testInstallmentPlanSearch2()
    {
        // Parameters for the API call
        $installmentPlanNumber =
            null;
        $refOrderNumber = null;
        $extendedParams = null;
        $xSplititTouchPoint =
            null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->installmentPlanSearch(
                $installmentPlanNumber,
                $refOrderNumber,
                $extendedParams,
                $xSplititTouchPoint
            );
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['text/json', true];

        // Assert result with expected response
        $this->newTestCase($result)->expectStatus(200)->allowExtraHeaders()->expectHeaders($headers)->assert();
    }

    public function testInstallmentPlanSearch()
    {
        // Parameters for the API call
        $installmentPlanNumber =
            null;
        $refOrderNumber = null;
        $extendedParams = null;
        $xSplititTouchPoint =
            null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->installmentPlanSearch(
                $installmentPlanNumber,
                $refOrderNumber,
                $extendedParams,
                $xSplititTouchPoint
            );
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['text/plain', true];

        // Assert result with expected response
        $this->newTestCase($result)->expectStatus(200)->allowExtraHeaders()->expectHeaders($headers)->assert();
    }

    public function testInstallmentPlanSearch1()
    {
        // Parameters for the API call
        $installmentPlanNumber =
            null;
        $refOrderNumber = null;
        $extendedParams = null;
        $xSplititTouchPoint =
            null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->installmentPlanSearch(
                $installmentPlanNumber,
                $refOrderNumber,
                $extendedParams,
                $xSplititTouchPoint
            );
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)->expectStatus(200)->allowExtraHeaders()->expectHeaders($headers)->assert();
    }
}
