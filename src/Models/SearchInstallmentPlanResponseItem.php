<?php

declare(strict_types=1);

/*
 * SplititWebApiV3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SplititWebApiV3Lib\Models;

use SplititWebApiV3Lib\ApiHelper;
use SplititWebApiV3Lib\Utils\DateTimeHelper;
use stdClass;

class SearchInstallmentPlanResponseItem implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $installmentPlanNumber;

    /**
     * @var \DateTime
     */
    private $dateCreated;

    /**
     * @var string|null
     */
    private $refOrderNumber;

    /**
     * @var string|null
     */
    private $purchaseMethod;

    /**
     * @var string
     */
    private $status;

    /**
     * @var string|null
     */
    private $currency;

    /**
     * @var float|null
     */
    private $originalAmount;

    /**
     * @var float|null
     */
    private $amount;

    /**
     * @var AuthorizationModel|null
     */
    private $authorization;

    /**
     * @var ShopperData|null
     */
    private $shopper;

    /**
     * @var AddressData|null
     */
    private $billingAddress;

    /**
     * @var PaymentMethodModel|null
     */
    private $paymentMethod;

    /**
     * @var array<string,string>|null
     */
    private $extendedParams;

    /**
     * @var Installment[]|null
     */
    private $installments;

    /**
     * @var RefundModel[]|null
     */
    private $refunds;

    /**
     * @var LinksData|null
     */
    private $links;

    /**
     * @param \DateTime $dateCreated
     * @param string $status
     */
    public function __construct(\DateTime $dateCreated, string $status)
    {
        $this->dateCreated = $dateCreated;
        $this->status = $status;
    }

    /**
     * Returns Installment Plan Number.
     */
    public function getInstallmentPlanNumber(): ?string
    {
        return $this->installmentPlanNumber;
    }

    /**
     * Sets Installment Plan Number.
     *
     * @maps InstallmentPlanNumber
     */
    public function setInstallmentPlanNumber(?string $installmentPlanNumber): void
    {
        $this->installmentPlanNumber = $installmentPlanNumber;
    }

    /**
     * Returns Date Created.
     */
    public function getDateCreated(): \DateTime
    {
        return $this->dateCreated;
    }

    /**
     * Sets Date Created.
     *
     * @required
     * @maps DateCreated
     * @factory \SplititWebApiV3Lib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setDateCreated(\DateTime $dateCreated): void
    {
        $this->dateCreated = $dateCreated;
    }

    /**
     * Returns Ref Order Number.
     */
    public function getRefOrderNumber(): ?string
    {
        return $this->refOrderNumber;
    }

    /**
     * Sets Ref Order Number.
     *
     * @maps RefOrderNumber
     */
    public function setRefOrderNumber(?string $refOrderNumber): void
    {
        $this->refOrderNumber = $refOrderNumber;
    }

    /**
     * Returns Purchase Method.
     */
    public function getPurchaseMethod(): ?string
    {
        return $this->purchaseMethod;
    }

    /**
     * Sets Purchase Method.
     *
     * @maps PurchaseMethod
     * @factory \SplititWebApiV3Lib\Models\PurchaseMethodEnum::checkValue
     */
    public function setPurchaseMethod(?string $purchaseMethod): void
    {
        $this->purchaseMethod = $purchaseMethod;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @required
     * @maps Status
     * @factory \SplititWebApiV3Lib\Models\PlanStatusEnum::checkValue
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Currency.
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Sets Currency.
     *
     * @maps Currency
     */
    public function setCurrency(?string $currency): void
    {
        $this->currency = $currency;
    }

    /**
     * Returns Original Amount.
     */
    public function getOriginalAmount(): ?float
    {
        return $this->originalAmount;
    }

    /**
     * Sets Original Amount.
     *
     * @maps OriginalAmount
     */
    public function setOriginalAmount(?float $originalAmount): void
    {
        $this->originalAmount = $originalAmount;
    }

    /**
     * Returns Amount.
     */
    public function getAmount(): ?float
    {
        return $this->amount;
    }

    /**
     * Sets Amount.
     *
     * @maps Amount
     */
    public function setAmount(?float $amount): void
    {
        $this->amount = $amount;
    }

    /**
     * Returns Authorization.
     */
    public function getAuthorization(): ?AuthorizationModel
    {
        return $this->authorization;
    }

    /**
     * Sets Authorization.
     *
     * @maps Authorization
     */
    public function setAuthorization(?AuthorizationModel $authorization): void
    {
        $this->authorization = $authorization;
    }

    /**
     * Returns Shopper.
     */
    public function getShopper(): ?ShopperData
    {
        return $this->shopper;
    }

    /**
     * Sets Shopper.
     *
     * @maps Shopper
     */
    public function setShopper(?ShopperData $shopper): void
    {
        $this->shopper = $shopper;
    }

    /**
     * Returns Billing Address.
     */
    public function getBillingAddress(): ?AddressData
    {
        return $this->billingAddress;
    }

    /**
     * Sets Billing Address.
     *
     * @maps BillingAddress
     */
    public function setBillingAddress(?AddressData $billingAddress): void
    {
        $this->billingAddress = $billingAddress;
    }

    /**
     * Returns Payment Method.
     */
    public function getPaymentMethod(): ?PaymentMethodModel
    {
        return $this->paymentMethod;
    }

    /**
     * Sets Payment Method.
     *
     * @maps PaymentMethod
     */
    public function setPaymentMethod(?PaymentMethodModel $paymentMethod): void
    {
        $this->paymentMethod = $paymentMethod;
    }

    /**
     * Returns Extended Params.
     *
     * @return array<string,string>|null
     */
    public function getExtendedParams(): ?array
    {
        return $this->extendedParams;
    }

    /**
     * Sets Extended Params.
     *
     * @maps ExtendedParams
     *
     * @param array<string,string>|null $extendedParams
     */
    public function setExtendedParams(?array $extendedParams): void
    {
        $this->extendedParams = $extendedParams;
    }

    /**
     * Returns Installments.
     *
     * @return Installment[]|null
     */
    public function getInstallments(): ?array
    {
        return $this->installments;
    }

    /**
     * Sets Installments.
     *
     * @maps Installments
     *
     * @param Installment[]|null $installments
     */
    public function setInstallments(?array $installments): void
    {
        $this->installments = $installments;
    }

    /**
     * Returns Refunds.
     *
     * @return RefundModel[]|null
     */
    public function getRefunds(): ?array
    {
        return $this->refunds;
    }

    /**
     * Sets Refunds.
     *
     * @maps Refunds
     *
     * @param RefundModel[]|null $refunds
     */
    public function setRefunds(?array $refunds): void
    {
        $this->refunds = $refunds;
    }

    /**
     * Returns Links.
     */
    public function getLinks(): ?LinksData
    {
        return $this->links;
    }

    /**
     * Sets Links.
     *
     * @maps Links
     */
    public function setLinks(?LinksData $links): void
    {
        $this->links = $links;
    }

    /**
     * Converts the SearchInstallmentPlanResponseItem object to a human-readable string representation.
     *
     * @return string The string representation of the SearchInstallmentPlanResponseItem object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'SearchInstallmentPlanResponseItem',
            [
                'installmentPlanNumber' => $this->installmentPlanNumber,
                'dateCreated' => $this->dateCreated,
                'refOrderNumber' => $this->refOrderNumber,
                'purchaseMethod' => $this->purchaseMethod,
                'status' => $this->status,
                'currency' => $this->currency,
                'originalAmount' => $this->originalAmount,
                'amount' => $this->amount,
                'authorization' => $this->authorization,
                'shopper' => $this->shopper,
                'billingAddress' => $this->billingAddress,
                'paymentMethod' => $this->paymentMethod,
                'extendedParams' => $this->extendedParams,
                'installments' => $this->installments,
                'refunds' => $this->refunds,
                'links' => $this->links
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->installmentPlanNumber)) {
            $json['InstallmentPlanNumber'] = $this->installmentPlanNumber;
        }
        $json['DateCreated']               = DateTimeHelper::toRfc3339DateTime($this->dateCreated);
        if (isset($this->refOrderNumber)) {
            $json['RefOrderNumber']        = $this->refOrderNumber;
        }
        if (isset($this->purchaseMethod)) {
            $json['PurchaseMethod']        = PurchaseMethodEnum::checkValue($this->purchaseMethod);
        }
        $json['Status']                    = PlanStatusEnum::checkValue($this->status);
        if (isset($this->currency)) {
            $json['Currency']              = $this->currency;
        }
        if (isset($this->originalAmount)) {
            $json['OriginalAmount']        = $this->originalAmount;
        }
        if (isset($this->amount)) {
            $json['Amount']                = $this->amount;
        }
        if (isset($this->authorization)) {
            $json['Authorization']         = $this->authorization;
        }
        if (isset($this->shopper)) {
            $json['Shopper']               = $this->shopper;
        }
        if (isset($this->billingAddress)) {
            $json['BillingAddress']        = $this->billingAddress;
        }
        if (isset($this->paymentMethod)) {
            $json['PaymentMethod']         = $this->paymentMethod;
        }
        if (isset($this->extendedParams)) {
            $json['ExtendedParams']        = $this->extendedParams;
        }
        if (isset($this->installments)) {
            $json['Installments']          = $this->installments;
        }
        if (isset($this->refunds)) {
            $json['Refunds']               = $this->refunds;
        }
        if (isset($this->links)) {
            $json['Links']                 = $this->links;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
