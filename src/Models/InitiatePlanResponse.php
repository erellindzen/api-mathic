<?php

declare(strict_types=1);

/*
 * SplititWebApiV3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SplititWebApiV3Lib\Models;

use SplititWebApiV3Lib\ApiHelper;
use stdClass;

class InitiatePlanResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $installmentPlanNumber;

    /**
     * @var string|null
     */
    private $refOrderNumber;

    /**
     * @var string|null
     */
    private $purchaseMethod;

    /**
     * @var string
     */
    private $status;

    /**
     * @var string|null
     */
    private $currency;

    /**
     * @var float|null
     */
    private $amount;

    /**
     * @var array<string,string>|null
     */
    private $extendedParams;

    /**
     * @var ShopperData|null
     */
    private $shopper;

    /**
     * @var AddressData|null
     */
    private $billingAddress;

    /**
     * @var string|null
     */
    private $checkoutUrl;

    /**
     * @var float|null
     */
    private $principalAmount;

    /**
     * @param string $status
     */
    public function __construct(string $status)
    {
        $this->status = $status;
    }

    /**
     * Returns Installment Plan Number.
     */
    public function getInstallmentPlanNumber(): ?string
    {
        return $this->installmentPlanNumber;
    }

    /**
     * Sets Installment Plan Number.
     *
     * @maps InstallmentPlanNumber
     */
    public function setInstallmentPlanNumber(?string $installmentPlanNumber): void
    {
        $this->installmentPlanNumber = $installmentPlanNumber;
    }

    /**
     * Returns Ref Order Number.
     */
    public function getRefOrderNumber(): ?string
    {
        return $this->refOrderNumber;
    }

    /**
     * Sets Ref Order Number.
     *
     * @maps RefOrderNumber
     */
    public function setRefOrderNumber(?string $refOrderNumber): void
    {
        $this->refOrderNumber = $refOrderNumber;
    }

    /**
     * Returns Purchase Method.
     */
    public function getPurchaseMethod(): ?string
    {
        return $this->purchaseMethod;
    }

    /**
     * Sets Purchase Method.
     *
     * @maps PurchaseMethod
     * @factory \SplititWebApiV3Lib\Models\PurchaseMethodEnum::checkValue
     */
    public function setPurchaseMethod(?string $purchaseMethod): void
    {
        $this->purchaseMethod = $purchaseMethod;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @required
     * @maps Status
     * @factory \SplititWebApiV3Lib\Models\PlanStatusEnum::checkValue
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Currency.
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Sets Currency.
     *
     * @maps Currency
     */
    public function setCurrency(?string $currency): void
    {
        $this->currency = $currency;
    }

    /**
     * Returns Amount.
     */
    public function getAmount(): ?float
    {
        return $this->amount;
    }

    /**
     * Sets Amount.
     *
     * @maps Amount
     */
    public function setAmount(?float $amount): void
    {
        $this->amount = $amount;
    }

    /**
     * Returns Extended Params.
     *
     * @return array<string,string>|null
     */
    public function getExtendedParams(): ?array
    {
        return $this->extendedParams;
    }

    /**
     * Sets Extended Params.
     *
     * @maps ExtendedParams
     *
     * @param array<string,string>|null $extendedParams
     */
    public function setExtendedParams(?array $extendedParams): void
    {
        $this->extendedParams = $extendedParams;
    }

    /**
     * Returns Shopper.
     */
    public function getShopper(): ?ShopperData
    {
        return $this->shopper;
    }

    /**
     * Sets Shopper.
     *
     * @maps Shopper
     */
    public function setShopper(?ShopperData $shopper): void
    {
        $this->shopper = $shopper;
    }

    /**
     * Returns Billing Address.
     */
    public function getBillingAddress(): ?AddressData
    {
        return $this->billingAddress;
    }

    /**
     * Sets Billing Address.
     *
     * @maps BillingAddress
     */
    public function setBillingAddress(?AddressData $billingAddress): void
    {
        $this->billingAddress = $billingAddress;
    }

    /**
     * Returns Checkout Url.
     */
    public function getCheckoutUrl(): ?string
    {
        return $this->checkoutUrl;
    }

    /**
     * Sets Checkout Url.
     *
     * @maps CheckoutUrl
     */
    public function setCheckoutUrl(?string $checkoutUrl): void
    {
        $this->checkoutUrl = $checkoutUrl;
    }

    /**
     * Returns Principal Amount.
     */
    public function getPrincipalAmount(): ?float
    {
        return $this->principalAmount;
    }

    /**
     * Sets Principal Amount.
     *
     * @maps PrincipalAmount
     */
    public function setPrincipalAmount(?float $principalAmount): void
    {
        $this->principalAmount = $principalAmount;
    }

    /**
     * Converts the InitiatePlanResponse object to a human-readable string representation.
     *
     * @return string The string representation of the InitiatePlanResponse object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'InitiatePlanResponse',
            [
                'installmentPlanNumber' => $this->installmentPlanNumber,
                'refOrderNumber' => $this->refOrderNumber,
                'purchaseMethod' => $this->purchaseMethod,
                'status' => $this->status,
                'currency' => $this->currency,
                'amount' => $this->amount,
                'extendedParams' => $this->extendedParams,
                'shopper' => $this->shopper,
                'billingAddress' => $this->billingAddress,
                'checkoutUrl' => $this->checkoutUrl,
                'principalAmount' => $this->principalAmount
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->installmentPlanNumber)) {
            $json['InstallmentPlanNumber'] = $this->installmentPlanNumber;
        }
        if (isset($this->refOrderNumber)) {
            $json['RefOrderNumber']        = $this->refOrderNumber;
        }
        if (isset($this->purchaseMethod)) {
            $json['PurchaseMethod']        = PurchaseMethodEnum::checkValue($this->purchaseMethod);
        }
        $json['Status']                    = PlanStatusEnum::checkValue($this->status);
        if (isset($this->currency)) {
            $json['Currency']              = $this->currency;
        }
        if (isset($this->amount)) {
            $json['Amount']                = $this->amount;
        }
        if (isset($this->extendedParams)) {
            $json['ExtendedParams']        = $this->extendedParams;
        }
        if (isset($this->shopper)) {
            $json['Shopper']               = $this->shopper;
        }
        if (isset($this->billingAddress)) {
            $json['BillingAddress']        = $this->billingAddress;
        }
        if (isset($this->checkoutUrl)) {
            $json['CheckoutUrl']           = $this->checkoutUrl;
        }
        if (isset($this->principalAmount)) {
            $json['PrincipalAmount']       = $this->principalAmount;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
