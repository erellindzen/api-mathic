<?php

declare(strict_types=1);

/*
 * SplititWebApiV3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SplititWebApiV3Lib\Models;

use SplititWebApiV3Lib\ApiHelper;
use stdClass;

class ThreeDSData implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $eCI;

    /**
     * @var string|null
     */
    private $cAVV;

    /**
     * @var string|null
     */
    private $xID;

    /**
     * @var string|null
     */
    private $directoryServerTxnId;

    /**
     * @var string|null
     */
    private $threeDSVersion;

    /**
     * @var string|null
     */
    private $transactionId;

    /**
     * Returns E CI.
     */
    public function getECI(): ?string
    {
        return $this->eCI;
    }

    /**
     * Sets E CI.
     *
     * @maps ECI
     */
    public function setECI(?string $eCI): void
    {
        $this->eCI = $eCI;
    }

    /**
     * Returns C AVV.
     */
    public function getCAVV(): ?string
    {
        return $this->cAVV;
    }

    /**
     * Sets C AVV.
     *
     * @maps CAVV
     */
    public function setCAVV(?string $cAVV): void
    {
        $this->cAVV = $cAVV;
    }

    /**
     * Returns X ID.
     */
    public function getXID(): ?string
    {
        return $this->xID;
    }

    /**
     * Sets X ID.
     *
     * @maps XID
     */
    public function setXID(?string $xID): void
    {
        $this->xID = $xID;
    }

    /**
     * Returns Directory Server Txn Id.
     */
    public function getDirectoryServerTxnId(): ?string
    {
        return $this->directoryServerTxnId;
    }

    /**
     * Sets Directory Server Txn Id.
     *
     * @maps DirectoryServerTxnId
     */
    public function setDirectoryServerTxnId(?string $directoryServerTxnId): void
    {
        $this->directoryServerTxnId = $directoryServerTxnId;
    }

    /**
     * Returns Three DS Version.
     */
    public function getThreeDSVersion(): ?string
    {
        return $this->threeDSVersion;
    }

    /**
     * Sets Three DS Version.
     *
     * @maps ThreeDSVersion
     */
    public function setThreeDSVersion(?string $threeDSVersion): void
    {
        $this->threeDSVersion = $threeDSVersion;
    }

    /**
     * Returns Transaction Id.
     */
    public function getTransactionId(): ?string
    {
        return $this->transactionId;
    }

    /**
     * Sets Transaction Id.
     *
     * @maps TransactionId
     */
    public function setTransactionId(?string $transactionId): void
    {
        $this->transactionId = $transactionId;
    }

    /**
     * Converts the ThreeDSData object to a human-readable string representation.
     *
     * @return string The string representation of the ThreeDSData object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'ThreeDSData',
            [
                'eCI' => $this->eCI,
                'cAVV' => $this->cAVV,
                'xID' => $this->xID,
                'directoryServerTxnId' => $this->directoryServerTxnId,
                'threeDSVersion' => $this->threeDSVersion,
                'transactionId' => $this->transactionId
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->eCI)) {
            $json['ECI']                  = $this->eCI;
        }
        if (isset($this->cAVV)) {
            $json['CAVV']                 = $this->cAVV;
        }
        if (isset($this->xID)) {
            $json['XID']                  = $this->xID;
        }
        if (isset($this->directoryServerTxnId)) {
            $json['DirectoryServerTxnId'] = $this->directoryServerTxnId;
        }
        if (isset($this->threeDSVersion)) {
            $json['ThreeDSVersion']       = $this->threeDSVersion;
        }
        if (isset($this->transactionId)) {
            $json['TransactionId']        = $this->transactionId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
