<?php

declare(strict_types=1);

/*
 * SplititWebApiV3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SplititWebApiV3Lib\Models;

use SplititWebApiV3Lib\ApiHelper;
use SplititWebApiV3Lib\Utils\DateTimeHelper;
use stdClass;

class RefundModel implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $refundId;

    /**
     * @var \DateTime
     */
    private $submitDate;

    /**
     * @var float
     */
    private $totalAmount;

    /**
     * @var string
     */
    private $status;

    /**
     * @var float
     */
    private $nonCreditRefundAmount;

    /**
     * @var float
     */
    private $creditRefundAmount;

    /**
     * @var string|null
     */
    private $referenceId;

    /**
     * @param \DateTime $submitDate
     * @param float $totalAmount
     * @param string $status
     * @param float $nonCreditRefundAmount
     * @param float $creditRefundAmount
     */
    public function __construct(
        \DateTime $submitDate,
        float $totalAmount,
        string $status,
        float $nonCreditRefundAmount,
        float $creditRefundAmount
    ) {
        $this->submitDate = $submitDate;
        $this->totalAmount = $totalAmount;
        $this->status = $status;
        $this->nonCreditRefundAmount = $nonCreditRefundAmount;
        $this->creditRefundAmount = $creditRefundAmount;
    }

    /**
     * Returns Refund Id.
     */
    public function getRefundId(): ?string
    {
        return $this->refundId;
    }

    /**
     * Sets Refund Id.
     *
     * @maps RefundId
     */
    public function setRefundId(?string $refundId): void
    {
        $this->refundId = $refundId;
    }

    /**
     * Returns Submit Date.
     */
    public function getSubmitDate(): \DateTime
    {
        return $this->submitDate;
    }

    /**
     * Sets Submit Date.
     *
     * @required
     * @maps SubmitDate
     * @factory \SplititWebApiV3Lib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setSubmitDate(\DateTime $submitDate): void
    {
        $this->submitDate = $submitDate;
    }

    /**
     * Returns Total Amount.
     */
    public function getTotalAmount(): float
    {
        return $this->totalAmount;
    }

    /**
     * Sets Total Amount.
     *
     * @required
     * @maps TotalAmount
     */
    public function setTotalAmount(float $totalAmount): void
    {
        $this->totalAmount = $totalAmount;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @required
     * @maps Status
     * @factory \SplititWebApiV3Lib\Models\RefundStatusEnum::checkValue
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Non Credit Refund Amount.
     */
    public function getNonCreditRefundAmount(): float
    {
        return $this->nonCreditRefundAmount;
    }

    /**
     * Sets Non Credit Refund Amount.
     *
     * @required
     * @maps NonCreditRefundAmount
     */
    public function setNonCreditRefundAmount(float $nonCreditRefundAmount): void
    {
        $this->nonCreditRefundAmount = $nonCreditRefundAmount;
    }

    /**
     * Returns Credit Refund Amount.
     */
    public function getCreditRefundAmount(): float
    {
        return $this->creditRefundAmount;
    }

    /**
     * Sets Credit Refund Amount.
     *
     * @required
     * @maps CreditRefundAmount
     */
    public function setCreditRefundAmount(float $creditRefundAmount): void
    {
        $this->creditRefundAmount = $creditRefundAmount;
    }

    /**
     * Returns Reference Id.
     */
    public function getReferenceId(): ?string
    {
        return $this->referenceId;
    }

    /**
     * Sets Reference Id.
     *
     * @maps ReferenceId
     */
    public function setReferenceId(?string $referenceId): void
    {
        $this->referenceId = $referenceId;
    }

    /**
     * Converts the RefundModel object to a human-readable string representation.
     *
     * @return string The string representation of the RefundModel object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'RefundModel',
            [
                'refundId' => $this->refundId,
                'submitDate' => $this->submitDate,
                'totalAmount' => $this->totalAmount,
                'status' => $this->status,
                'nonCreditRefundAmount' => $this->nonCreditRefundAmount,
                'creditRefundAmount' => $this->creditRefundAmount,
                'referenceId' => $this->referenceId
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->refundId)) {
            $json['RefundId']          = $this->refundId;
        }
        $json['SubmitDate']            = DateTimeHelper::toRfc3339DateTime($this->submitDate);
        $json['TotalAmount']           = $this->totalAmount;
        $json['Status']                = RefundStatusEnum::checkValue($this->status);
        $json['NonCreditRefundAmount'] = $this->nonCreditRefundAmount;
        $json['CreditRefundAmount']    = $this->creditRefundAmount;
        if (isset($this->referenceId)) {
            $json['ReferenceId']       = $this->referenceId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
