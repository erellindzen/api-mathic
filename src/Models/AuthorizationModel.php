<?php

declare(strict_types=1);

/*
 * SplititWebApiV3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SplititWebApiV3Lib\Models;

use SplititWebApiV3Lib\ApiHelper;
use SplititWebApiV3Lib\Utils\DateTimeHelper;
use stdClass;

class AuthorizationModel implements \JsonSerializable
{
    /**
     * @var string
     */
    private $status;

    /**
     * @var \DateTime|null
     */
    private $date;

    /**
     * @var string|null
     */
    private $splititErrorResultCode;

    /**
     * @var string|null
     */
    private $gatewayTransactionID;

    /**
     * @var string|null
     */
    private $gatewayResultCode;

    /**
     * @var string|null
     */
    private $gatewayResultMessage;

    /**
     * @var ThreeDsRedirectDataV3|null
     */
    private $threeDSRedirect;

    /**
     * @var string|null
     */
    private $cAVV;

    /**
     * @var string|null
     */
    private $eCI;

    /**
     * @var string|null
     */
    private $gatewaySourceResponse;

    /**
     * @param string $status
     */
    public function __construct(string $status)
    {
        $this->status = $status;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @required
     * @maps Status
     * @factory \SplititWebApiV3Lib\Models\GwAuthorizationStatusEnum::checkValue
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Date.
     */
    public function getDate(): ?\DateTime
    {
        return $this->date;
    }

    /**
     * Sets Date.
     *
     * @maps Date
     * @factory \SplititWebApiV3Lib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setDate(?\DateTime $date): void
    {
        $this->date = $date;
    }

    /**
     * Returns Splitit Error Result Code.
     */
    public function getSplititErrorResultCode(): ?string
    {
        return $this->splititErrorResultCode;
    }

    /**
     * Sets Splitit Error Result Code.
     *
     * @maps SplititErrorResultCode
     */
    public function setSplititErrorResultCode(?string $splititErrorResultCode): void
    {
        $this->splititErrorResultCode = $splititErrorResultCode;
    }

    /**
     * Returns Gateway Transaction ID.
     */
    public function getGatewayTransactionID(): ?string
    {
        return $this->gatewayTransactionID;
    }

    /**
     * Sets Gateway Transaction ID.
     *
     * @maps GatewayTransactionID
     */
    public function setGatewayTransactionID(?string $gatewayTransactionID): void
    {
        $this->gatewayTransactionID = $gatewayTransactionID;
    }

    /**
     * Returns Gateway Result Code.
     */
    public function getGatewayResultCode(): ?string
    {
        return $this->gatewayResultCode;
    }

    /**
     * Sets Gateway Result Code.
     *
     * @maps GatewayResultCode
     */
    public function setGatewayResultCode(?string $gatewayResultCode): void
    {
        $this->gatewayResultCode = $gatewayResultCode;
    }

    /**
     * Returns Gateway Result Message.
     */
    public function getGatewayResultMessage(): ?string
    {
        return $this->gatewayResultMessage;
    }

    /**
     * Sets Gateway Result Message.
     *
     * @maps GatewayResultMessage
     */
    public function setGatewayResultMessage(?string $gatewayResultMessage): void
    {
        $this->gatewayResultMessage = $gatewayResultMessage;
    }

    /**
     * Returns Three DS Redirect.
     */
    public function getThreeDSRedirect(): ?ThreeDsRedirectDataV3
    {
        return $this->threeDSRedirect;
    }

    /**
     * Sets Three DS Redirect.
     *
     * @maps ThreeDSRedirect
     */
    public function setThreeDSRedirect(?ThreeDsRedirectDataV3 $threeDSRedirect): void
    {
        $this->threeDSRedirect = $threeDSRedirect;
    }

    /**
     * Returns C AVV.
     */
    public function getCAVV(): ?string
    {
        return $this->cAVV;
    }

    /**
     * Sets C AVV.
     *
     * @maps CAVV
     */
    public function setCAVV(?string $cAVV): void
    {
        $this->cAVV = $cAVV;
    }

    /**
     * Returns E CI.
     */
    public function getECI(): ?string
    {
        return $this->eCI;
    }

    /**
     * Sets E CI.
     *
     * @maps ECI
     */
    public function setECI(?string $eCI): void
    {
        $this->eCI = $eCI;
    }

    /**
     * Returns Gateway Source Response.
     */
    public function getGatewaySourceResponse(): ?string
    {
        return $this->gatewaySourceResponse;
    }

    /**
     * Sets Gateway Source Response.
     *
     * @maps GatewaySourceResponse
     */
    public function setGatewaySourceResponse(?string $gatewaySourceResponse): void
    {
        $this->gatewaySourceResponse = $gatewaySourceResponse;
    }

    /**
     * Converts the AuthorizationModel object to a human-readable string representation.
     *
     * @return string The string representation of the AuthorizationModel object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'AuthorizationModel',
            [
                'status' => $this->status,
                'date' => $this->date,
                'splititErrorResultCode' => $this->splititErrorResultCode,
                'gatewayTransactionID' => $this->gatewayTransactionID,
                'gatewayResultCode' => $this->gatewayResultCode,
                'gatewayResultMessage' => $this->gatewayResultMessage,
                'threeDSRedirect' => $this->threeDSRedirect,
                'cAVV' => $this->cAVV,
                'eCI' => $this->eCI,
                'gatewaySourceResponse' => $this->gatewaySourceResponse
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['Status']                     = GwAuthorizationStatusEnum::checkValue($this->status);
        if (isset($this->date)) {
            $json['Date']                   = DateTimeHelper::toRfc3339DateTime($this->date);
        }
        if (isset($this->splititErrorResultCode)) {
            $json['SplititErrorResultCode'] = $this->splititErrorResultCode;
        }
        if (isset($this->gatewayTransactionID)) {
            $json['GatewayTransactionID']   = $this->gatewayTransactionID;
        }
        if (isset($this->gatewayResultCode)) {
            $json['GatewayResultCode']      = $this->gatewayResultCode;
        }
        if (isset($this->gatewayResultMessage)) {
            $json['GatewayResultMessage']   = $this->gatewayResultMessage;
        }
        if (isset($this->threeDSRedirect)) {
            $json['ThreeDSRedirect']        = $this->threeDSRedirect;
        }
        if (isset($this->cAVV)) {
            $json['CAVV']                   = $this->cAVV;
        }
        if (isset($this->eCI)) {
            $json['ECI']                    = $this->eCI;
        }
        if (isset($this->gatewaySourceResponse)) {
            $json['GatewaySourceResponse']  = $this->gatewaySourceResponse;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
