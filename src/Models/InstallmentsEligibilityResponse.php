<?php

declare(strict_types=1);

/*
 * SplititWebApiV3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SplititWebApiV3Lib\Models;

use SplititWebApiV3Lib\ApiHelper;
use stdClass;

class InstallmentsEligibilityResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $installmentProvider;

    /**
     * @var PaymentPlanOptionModel[]|null
     */
    private $paymentPlanOptions;

    /**
     * Returns Installment Provider.
     */
    public function getInstallmentProvider(): ?string
    {
        return $this->installmentProvider;
    }

    /**
     * Sets Installment Provider.
     *
     * @maps InstallmentProvider
     */
    public function setInstallmentProvider(?string $installmentProvider): void
    {
        $this->installmentProvider = $installmentProvider;
    }

    /**
     * Returns Payment Plan Options.
     *
     * @return PaymentPlanOptionModel[]|null
     */
    public function getPaymentPlanOptions(): ?array
    {
        return $this->paymentPlanOptions;
    }

    /**
     * Sets Payment Plan Options.
     *
     * @maps PaymentPlanOptions
     *
     * @param PaymentPlanOptionModel[]|null $paymentPlanOptions
     */
    public function setPaymentPlanOptions(?array $paymentPlanOptions): void
    {
        $this->paymentPlanOptions = $paymentPlanOptions;
    }

    /**
     * Converts the InstallmentsEligibilityResponse object to a human-readable string representation.
     *
     * @return string The string representation of the InstallmentsEligibilityResponse object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'InstallmentsEligibilityResponse',
            [
                'installmentProvider' => $this->installmentProvider,
                'paymentPlanOptions' => $this->paymentPlanOptions
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->installmentProvider)) {
            $json['InstallmentProvider'] = $this->installmentProvider;
        }
        if (isset($this->paymentPlanOptions)) {
            $json['PaymentPlanOptions']  = $this->paymentPlanOptions;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
